class Observer:
    def update(self, message):
        pass

class Observable:
    def __init__(self):
        self.observers = []

    def register(self, observer):
        if observer not in self.observers:
            self.observers.append(observer)

    def unregister(self, observer):
        if observer in self.observers:
            self.observers.remove(observer)

    def notify_observers(self, message):
        for observer in self.observers:
            observer.update(message)

class ConcreteObserver(Observer):
    def __init__(self, name):
        self.name = name

    def update(self, message):
        print(f'{self.name} received message: {message}')

observable = Observable()
observer1 = ConcreteObserver('Observer 1')
observer2 = ConcreteObserver('Observer 2')

observable.register(observer1)
observable.register(observer2)

observable.notify_observers('Hello, Observers!')
